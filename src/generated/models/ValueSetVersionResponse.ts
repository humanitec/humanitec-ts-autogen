/* tslint:disable */
/* eslint-disable */
/**
 * Humanitec API
 * # Introduction The *Humanitec API* allows you to automate and integrate Humanitec into your developer and operational workflows. The API is a REST based API. It is based around a set of concepts:  * Core * External Resources * Sets and Deltas  ## Authentication  Almost all requests made to the Humanitec API require Authentication. See our [Developer Docs on API Authentication](https://developer.humanitec.com/platform-orchestrator/reference/api-references/#authentication) for instructions.  ## Content Types All of the Humanitec API unless explicitly only accepts content types of `application/json` and will always return valid `application/json` or an empty response.  ## Response Codes ### Success Any response code in the `2xx` range should be regarded as success.  | **Code** | **Meaning** | | --- | --- | | `200` | Success | | `201` | Success (In future, `201` will be replaced by `200`) | | `204` | Success, but no content in response |  _Note: We plan to simplify the interface by replacing 201 with 200 status codes._  ### Failure Any response code in the `4xx` should be regarded as an error which can be rectified by the client. `5xx` error codes indicate errors that cannot be corrected by the client.  | **Code** | **Meaning** | | --- | --- | | `400` | General error. (Body will contain details) | | `401` | Attempt to access protected resource without `Authorization` Header. | | `403` | The `Bearer` or `JWT` does not grant access to the requested resource. | | `404` | Resource not found. | | `405` | Method not allowed | | `409` | Conflict. Usually indicated a resource with that ID already exists. | | `422` | Unprocessable Entity. The body was not valid JSON, was empty or contained an object different from what was expected. | | `429` | Too many requests - request rate limit has been reached. | | `500` | Internal Error. If it occurs repeatedly, contact support. | 
 *
 * The version of the OpenAPI document: 0.26.6
 * Contact: apiteam@humanitec.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { JSONPatchResponse } from './JSONPatchResponse.js';
import {
    JSONPatchResponseFromJSON,
    JSONPatchResponseFromJSONTyped,
    JSONPatchResponseToJSON,
} from './JSONPatchResponse.js';
import type { ValueResponse } from './ValueResponse.js';
import {
    ValueResponseFromJSON,
    ValueResponseFromJSONTyped,
    ValueResponseToJSON,
} from './ValueResponse.js';
import type { ValueSetVersionResultOf } from './ValueSetVersionResultOf.js';
import {
    ValueSetVersionResultOfFromJSON,
    ValueSetVersionResultOfFromJSONTyped,
    ValueSetVersionResultOfToJSON,
} from './ValueSetVersionResultOf.js';

/**
 * A Value Set Version can be used as a track record of Shared Values changes, to restore a previous version of a Shared Value or Value Set, or to purge a Shared Value if it shouldn't be accessible anymore.
 * @export
 * @interface ValueSetVersionResponse
 */
export interface ValueSetVersionResponse {
    /**
     * 
     * @type {Array<JSONPatchResponse>}
     * @memberof ValueSetVersionResponse
     */
    change: Array<JSONPatchResponse>;
    /**
     * 
     * @type {string}
     * @memberof ValueSetVersionResponse
     */
    comment: string;
    /**
     * 
     * @type {Date}
     * @memberof ValueSetVersionResponse
     */
    created_at: Date;
    /**
     * 
     * @type {string}
     * @memberof ValueSetVersionResponse
     */
    created_by: string;
    /**
     * 
     * @type {string}
     * @memberof ValueSetVersionResponse
     */
    id: string;
    /**
     * 
     * @type {ValueSetVersionResultOf}
     * @memberof ValueSetVersionResponse
     */
    result_of: ValueSetVersionResultOf | null;
    /**
     * 
     * @type {string}
     * @memberof ValueSetVersionResponse
     */
    source_value_set_version_id: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ValueSetVersionResponse
     */
    updated_at: Date;
    /**
     * 
     * @type {{ [key: string]: ValueResponse; }}
     * @memberof ValueSetVersionResponse
     */
    values: { [key: string]: ValueResponse; };
}

/**
 * Check if a given object implements the ValueSetVersionResponse interface.
 */
export function instanceOfValueSetVersionResponse(value: object): boolean {
    if (!('change' in value)) return false;
    if (!('comment' in value)) return false;
    if (!('created_at' in value)) return false;
    if (!('created_by' in value)) return false;
    if (!('id' in value)) return false;
    if (!('result_of' in value)) return false;
    if (!('source_value_set_version_id' in value)) return false;
    if (!('updated_at' in value)) return false;
    if (!('values' in value)) return false;
    return true;
}

export function ValueSetVersionResponseFromJSON(json: any): ValueSetVersionResponse {
    return ValueSetVersionResponseFromJSONTyped(json, false);
}

export function ValueSetVersionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValueSetVersionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'change': ((json['change'] as Array<any>).map(JSONPatchResponseFromJSON)),
        'comment': json['comment'],
        'created_at': (new Date(json['created_at'])),
        'created_by': json['created_by'],
        'id': json['id'],
        'result_of': ValueSetVersionResultOfFromJSON(json['result_of']),
        'source_value_set_version_id': json['source_value_set_version_id'],
        'updated_at': (new Date(json['updated_at'])),
        'values': (mapValues(json['values'], ValueResponseFromJSON)),
    };
}

export function ValueSetVersionResponseToJSON(value?: ValueSetVersionResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'change': ((value['change'] as Array<any>).map(JSONPatchResponseToJSON)),
        'comment': value['comment'],
        'created_at': ((value['created_at']).toISOString()),
        'created_by': value['created_by'],
        'id': value['id'],
        'result_of': ValueSetVersionResultOfToJSON(value['result_of']),
        'source_value_set_version_id': value['source_value_set_version_id'],
        'updated_at': ((value['updated_at']).toISOString()),
        'values': (mapValues(value['values'], ValueResponseToJSON)),
    };
}

